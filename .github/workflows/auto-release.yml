name: Auto Release

on:
  push:
    branches: [ main ]  # or master
    paths:
      - '**.zip'

permissions:
  contents: write  # Important for creating releases

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout with LFS
      uses: actions/checkout@v4
      with:
        lfs: true
        fetch-depth: 0
    
    - name: Pull LFS files
      run: git lfs pull
    
    - name: Calculate version
      id: version
      run: |
        VERSION_PATCH=$(git rev-list --count HEAD)
        VERSION="1.0.${VERSION_PATCH}"
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Creating version: ${VERSION}"
    
    - name: Prepare release files
      id: files
      run: |
        # Find your modpack zip
        ORIGINAL=$(find . -name "*.zip" -type f | head -1)
        echo "Found: ${ORIGINAL}"
        
        # Create both versioned and stable filenames
        cp "${ORIGINAL}" "modpack-v${{ steps.version.outputs.VERSION }}.zip"
        cp "${ORIGINAL}" "modpack-latest.zip"
        
        echo "Files created:"
        ls -la *.zip
    
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Minecraft Modpack v${{ steps.version.outputs.VERSION }}
          
          ### Download Options:
          ðŸ“¦ **Stable URL (always latest):**
          `https://github.com/${{ github.repository }}/releases/latest/download/modpack-latest.zip`
          
          ðŸ“¦ **This version:**
          `https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/modpack-v${{ steps.version.outputs.VERSION }}.zip`
        files: |
          modpack-v${{ steps.version.outputs.VERSION }}.zip
          modpack-latest.zip
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
